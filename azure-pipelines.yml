
trigger:
- master

pool: myAgentPool

variables:
  # TODO: Replace the service connection name as used in the DevOps project settings
  AZURESERVICECONNECTIONID: 'svc-connection'
  RESOURCEGROUP: 'Azuredevops'
  
  # TODO: Specify the value of the existing Web App name
  WEBAPPNAME: 'udacity-project-2-pythonflask'

  # Environment name
  environmentName: 'flask-ml-service'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3.9 -m pip install --upgrade pip
        python3.9 -m pip install setup
        python3.9 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Update Python packages and install requirements'

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
      workingDirectory: $(projectRoot)
      displayName: 'Makefile install'

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName:  'Run lint tests'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(projectRoot)' 
        includeRootFolder: false 
        archiveType: 'zip' 
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
        replaceExistingArchive: true 
      displayName: 'Archive files'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
        ArtifactName: 'drop'
        publishLocation: 'Container' 
      displayName: 'Publish Artifact: drop'
- stage: Deploy
  displayName: Deploy to Azure App Service
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(AZURESERVICECONNECTIONID)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          chmod +x ./commands.sh
          ./commands.sh
      displayName: 'Execute commands.sh Script'

   